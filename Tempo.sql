DROP TABLE IF EXISTS DIM_TEMPO

CREATE TABLE dbo.DIM_TEMPO
(
  DIM_TEMPO_SEQ_TEMPO NUMERIC(14) PRIMARY KEY,
  DIM_TEMPO_ANO NUMERIC(4) NOT NULL,
  DIM_TEMPO_SEMESTRE NUMERIC(2) NOT NULL,
  DIM_TEMPO_QUADRIMESTRE NUMERIC(2) NOT NULL,
  DIM_TEMPO_TRIMESTRE NUMERIC(2) NOT NULL,
  DIM_TEMPO_BIMESTRE NUMERIC(2) NOT NULL,
  DIM_TEMPO_MES NUMERIC(2) NOT NULL,
  DIM_TEMPO_DESC_MES VARCHAR(20) NOT NULL,
  DIM_TEMPO_DESC_MES_ABREV VARCHAR(20) NOT NULL,
  DIM_TEMPO_NUM_SEMANA_ANO NUMERIC(2) NOT NULL,
  DIM_TEMPO_DIA NUMERIC(2) NOT NULL,
  DIM_TEMPO_NUM_DIA_SEMANA NUMERIC(2) NOT NULL,
  DIM_TEMPO_DATA DATETIME NOT NULL,
  DIM_TEMPO_HORA NUMERIC(2) NOT NULL,
  DIM_TEMPO_MINUTO NUMERIC(2) NOT NULL,
  DIM_TEMPO_SEGUNDO NUMERIC(2) NOT NULL
)

IF EXISTS (
  SELECT * 
    FROM INFORMATION_SCHEMA.ROUTINES 
   WHERE SPECIFIC_NAME = N'PROC_PREENCHE_TEMPO' 
)
   DROP PROCEDURE dbo.PROC_PREENCHE_TEMPO

CREATE PROCEDURE dbo.PROC_PREENCHE_TEMPO
AS
BEGIN
  -- Variáveis
  DECLARE @V_DIM_TEMPO_SEQ_TEMPO NUMERIC(14),
          @V_DATA DATETIME,
          @V_DATA_MIN DATETIME,
          @V_DATA_MAX DATETIME;

  -- Defina o intervalo de datas com base na tabela dbo.rental
  SELECT @V_DATA_MIN = MIN(rental_date), @V_DATA_MAX = MAX(rental_date)
  FROM dbo.rental;

  -- Inicializa a variável de data
  SET @V_DATA = @V_DATA_MIN;

  -- Loop através das datas
  WHILE @V_DATA <= @V_DATA_MAX
  BEGIN
    -- Executa a procedure para preencher a dimensão de tempo
    BEGIN TRANSACTION;
      EXEC dbo.PROC_DIM_TEMPO @V_DATA, @V_DIM_TEMPO_SEQ_TEMPO OUTPUT;
    COMMIT;

    -- Incrementa um dia
    SET @V_DATA = DATEADD(DAY, 1, @V_DATA);
  END;
END

EXEC DBO.PROC_PREENCHE_TEMPO

SELECT * FROM DIM_TEMPO